/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Atividade;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TI-FCB
 */
public class FMCadComputador extends javax.swing.JFrame {

    /**
     * Creates new form FMCadComputador
     */
    public FMCadComputador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        BuGSistemaOP = new javax.swing.ButtonGroup();
        BuGProcessador = new javax.swing.ButtonGroup();
        BuGHd = new javax.swing.ButtonGroup();
        PMnRelatorio = new javax.swing.JPopupMenu();
        MnExcluir = new javax.swing.JMenuItem();
        MnCadastrar = new javax.swing.JMenuItem();
        MnLimpar = new javax.swing.JMenuItem();
        LBNome = new javax.swing.JLabel();
        TxtNome = new javax.swing.JTextField();
        LBCidade = new javax.swing.JLabel();
        CmBoxCidade = new javax.swing.JComboBox<>();
        LBMemoria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListMemoria = new javax.swing.JList<>();
        PnSistemaOP = new javax.swing.JPanel();
        RButWindows = new javax.swing.JRadioButton();
        RButLinux = new javax.swing.JRadioButton();
        PNProcessador = new javax.swing.JPanel();
        RButIntel = new javax.swing.JRadioButton();
        RButAMD = new javax.swing.JRadioButton();
        LBVersao = new javax.swing.JLabel();
        CmBoxVersao = new javax.swing.JComboBox<>();
        PNHd = new javax.swing.JPanel();
        CBox320 = new javax.swing.JCheckBox();
        CBox500 = new javax.swing.JCheckBox();
        CBox1 = new javax.swing.JCheckBox();
        ButCadastrar = new javax.swing.JButton();
        PNRelatorio = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbRelatorio = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        MnExcluir.setText("Excluir");
        MnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnExcluirActionPerformed(evt);
            }
        });
        PMnRelatorio.add(MnExcluir);

        MnCadastrar.setText("Cadastrar ");
        MnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButCadastrarActionPerformed(evt);
            }
        });
        PMnRelatorio.add(MnCadastrar);

        MnLimpar.setText("Limpar");
        MnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnLimparActionPerformed(evt);
            }
        });
        PMnRelatorio.add(MnLimpar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Computadores");

        LBNome.setText("Nome");

        LBCidade.setText("Cidade");

        CmBoxCidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aracruz", "Colatina", "Serra ", "Vitória" }));
        CmBoxCidade.setSelectedIndex(1);

        LBMemoria.setText("Memória RAM");

        ListMemoria.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Menos que 1 GB", "1 GB", "2 GB", "3 GB", "4 GB", "Mais que 4 GB" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ListMemoria);

        PnSistemaOP.setBorder(javax.swing.BorderFactory.createTitledBorder("Sist. Operacional"));
        PnSistemaOP.setLayout(new java.awt.BorderLayout());

        BuGSistemaOP.add(RButWindows);
        RButWindows.setMnemonic('W');
        RButWindows.setText("Windows");
        RButWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButWindowsActionPerformed(evt);
            }
        });
        PnSistemaOP.add(RButWindows, java.awt.BorderLayout.CENTER);

        BuGSistemaOP.add(RButLinux);
        RButLinux.setMnemonic('L');
        RButLinux.setText("Linux");
        RButLinux.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButWindowsActionPerformed(evt);
            }
        });
        PnSistemaOP.add(RButLinux, java.awt.BorderLayout.PAGE_START);

        PNProcessador.setBorder(javax.swing.BorderFactory.createTitledBorder("Processador"));
        PNProcessador.setLayout(new java.awt.BorderLayout());

        BuGProcessador.add(RButIntel);
        RButIntel.setMnemonic('I');
        RButIntel.setText("Intel");
        PNProcessador.add(RButIntel, java.awt.BorderLayout.CENTER);

        BuGProcessador.add(RButAMD);
        RButAMD.setMnemonic('A');
        RButAMD.setText("AMD");
        PNProcessador.add(RButAMD, java.awt.BorderLayout.PAGE_START);

        LBVersao.setText("Versão");

        PNHd.setBorder(javax.swing.BorderFactory.createTitledBorder("HD"));
        PNHd.setLayout(new java.awt.BorderLayout());

        BuGHd.add(CBox320);
        CBox320.setMnemonic('3');
        CBox320.setText("320 GB");
        PNHd.add(CBox320, java.awt.BorderLayout.CENTER);

        BuGHd.add(CBox500);
        CBox500.setMnemonic('5');
        CBox500.setSelected(true);
        CBox500.setText("500 GB");
        PNHd.add(CBox500, java.awt.BorderLayout.PAGE_START);

        BuGHd.add(CBox1);
        CBox1.setMnemonic('1');
        CBox1.setText("1 TB");
        PNHd.add(CBox1, java.awt.BorderLayout.PAGE_END);

        ButCadastrar.setText("Cadastrar");
        ButCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButCadastrarActionPerformed(evt);
            }
        });

        PNRelatorio.setBorder(javax.swing.BorderFactory.createTitledBorder("Relatório"));
        PNRelatorio.setLayout(new java.awt.BorderLayout());

        TbRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Cidade", "SO", "Versão", "Processador", "HD", "Memória"
            }
        ));
        TbRelatorio.setComponentPopupMenu(PMnRelatorio);
        jScrollPane2.setViewportView(TbRelatorio);

        PNRelatorio.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBNome)
                    .addComponent(TxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PnSistemaOP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PNProcessador, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LBVersao)
                            .addComponent(CmBoxVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PNHd, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBMemoria)
                    .addComponent(LBCidade)
                    .addComponent(CmBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ButCadastrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PNRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBNome)
                    .addComponent(LBCidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBMemoria)
                            .addComponent(LBVersao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(ButCadastrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CmBoxVersao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(PNHd, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(PnSistemaOP, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(PNProcessador, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PNRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RButWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RButWindowsActionPerformed
        if(RButWindows.isSelected()){
           CmBoxVersao.removeAllItems();
           CmBoxVersao.addItem("XP");
           CmBoxVersao.addItem("Win7");
           CmBoxVersao.addItem("Win8");
           CmBoxVersao.addItem("2003 Server");
           CmBoxVersao.addItem("2008 Server");
           
           CmBoxVersao.setSelectedIndex(2);
        }
        else if(RButLinux.isSelected()){
           CmBoxVersao.removeAllItems();
           CmBoxVersao.addItem("Ubuntu");
           CmBoxVersao.addItem("Fedora");
           CmBoxVersao.addItem("Red Hat");
           CmBoxVersao.addItem("Suse");
           CmBoxVersao.addItem("Debian");
           
           CmBoxVersao.setSelectedIndex(0);
           
           
        }
    }//GEN-LAST:event_RButWindowsActionPerformed

    private void ButCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButCadastrarActionPerformed
        
        String nome = TxtNome.getText();
        String cidade = CmBoxCidade.getSelectedItem().toString();
        String so = "";
        String versao = CmBoxVersao.getSelectedItem().toString();
        String processador = "";
        String HD = "";
        String memoria = ListMemoria.getSelectedValue().toString();
        
        if(BuGSistemaOP.getSelection().getMnemonic() == 'L'){
            so = "Linux";
        }
        else if(BuGSistemaOP.getSelection().getMnemonic() == 'W'){
            so = "Windows";
        }
        
        if(BuGProcessador.getSelection().getMnemonic() == 'I'){
           processador = "Intel"; 
        }
        else if(BuGProcessador.getSelection().getMnemonic() == 'A'){
           processador = "AMD"; 
        }
        
        if(BuGHd.getSelection().getMnemonic() == '5'){
          HD = "500 GB";
        }
        else if(BuGHd.getSelection().getMnemonic() == '3'){
          HD = "320 GB";
        }
        else if(BuGHd.getSelection().getMnemonic() == '1'){
          HD = "1 GB";
        }
        
        inserirTabela(nome,cidade,so,versao,processador,HD,memoria);
        
    }//GEN-LAST:event_ButCadastrarActionPerformed

    private void MnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnLimparActionPerformed
        TxtNome.setText("");
    }//GEN-LAST:event_MnLimparActionPerformed

    private void MnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnExcluirActionPerformed
        int linha = TbRelatorio.getSelectedRow();
        if(linha >= 0){
            ((DefaultTableModel) TbRelatorio.getModel()).removeRow(linha);
        }
    }//GEN-LAST:event_MnExcluirActionPerformed

    public void inserirTabela(String nome, String cidade, String so, String versao, String processador, String HD, String memoria){
        ((DefaultTableModel) TbRelatorio.getModel()).addRow(new Object[0]);
        
        int coluna = 0;
        int linha = TbRelatorio.getRowCount() - 1;
        
        TbRelatorio.setValueAt(nome, linha, coluna++);
        TbRelatorio.setValueAt(cidade, linha, coluna++);
        TbRelatorio.setValueAt(so, linha, coluna++);
        TbRelatorio.setValueAt(versao, linha, coluna++);
        TbRelatorio.setValueAt(processador, linha, coluna++);
        TbRelatorio.setValueAt(HD, linha, coluna++);
        TbRelatorio.setValueAt(memoria, linha, coluna++);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMCadComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMCadComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMCadComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMCadComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FMCadComputador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BuGHd;
    private javax.swing.ButtonGroup BuGProcessador;
    private javax.swing.ButtonGroup BuGSistemaOP;
    private javax.swing.JButton ButCadastrar;
    private javax.swing.JCheckBox CBox1;
    private javax.swing.JCheckBox CBox320;
    private javax.swing.JCheckBox CBox500;
    private javax.swing.JComboBox<String> CmBoxCidade;
    private javax.swing.JComboBox<String> CmBoxVersao;
    private javax.swing.JLabel LBCidade;
    private javax.swing.JLabel LBMemoria;
    private javax.swing.JLabel LBNome;
    private javax.swing.JLabel LBVersao;
    private javax.swing.JList<String> ListMemoria;
    private javax.swing.JMenuItem MnCadastrar;
    private javax.swing.JMenuItem MnExcluir;
    private javax.swing.JMenuItem MnLimpar;
    private javax.swing.JPopupMenu PMnRelatorio;
    private javax.swing.JPanel PNHd;
    private javax.swing.JPanel PNProcessador;
    private javax.swing.JPanel PNRelatorio;
    private javax.swing.JPanel PnSistemaOP;
    private javax.swing.JRadioButton RButAMD;
    private javax.swing.JRadioButton RButIntel;
    private javax.swing.JRadioButton RButLinux;
    private javax.swing.JRadioButton RButWindows;
    private javax.swing.JTable TbRelatorio;
    private javax.swing.JTextField TxtNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
